##### Before you begin

# Install dependencies: 

#pysam
#tabulate
#bedtools
#deeptools
#matplotlib
#pandas
#bwa
#pairtools
#samtools
#preseq
#python3
#pip3

# Install other dependencies:

#juicer
#trim galore
#



# On Ubuntu/Linux system clone the git repository:
git clone https://github.com/dovetail-genomics/Micro-C.git
# Run installation script
./Micro-C/installDep.sh

# Once installation is complete close and reopen terminal

# Gather data sets:

## 2 fastq files R1 and R2 (fastq.gz is also acceptable)
## We worked with sample data from Yong: find R1/R2 in microsoft teams
## Clean up of sample data with trim galore
trim_galore --paired ./EC1_S1_L001_R1_001.fastq.gz ./EC1_S1_L001_R2_001.fastq.gz # Run in same directory as files

## Reference genome from UCSC: 
wget https://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.fa.gz #Stored in ./juicer/references

##### Pre-Alignment: 

# Generate an index file for your reference (a reference file with only the main chromosomes should be used)
## Convert downloaded genome to the correct .fasta format
gunzip hg38.fa.gz
cp hg38.fa hg38.fasta
## Generate index file
samtools faidx hg38.fa.gz

# Use the index file to generate the genome file by printing the first two columns into a new file
cut -f1,2 hg38.fasta.fai > hg38.genome

# Prior to alignment, generate a bwa index file for the chosen reference genome
bwa index hg38.fasta

# Create a temporary directory to avoid running into memory issues in later steps
mkdir /home/user/temp

##### Alignment: From fastq to final valid pairs bam file

# Align your files to reference genome
## Change directory to location of files
cd /home/user/Downloads/microc_summer2022
## Align 
bwa mem -5SP -T0 -t8 ./juicer/references/hg38.fasta ./EC1_S1_L001_R1_001_val_1.fq.gz ./EC1_S1_L001_R2_001_val_2.fq.gz -o aligned.sam
### -5 :
### -S :
### -P :
### -T0 :
### -t8 :
### -o :

# Use parse module of pairtools to organize ligation events into a .pairsam file
##
##
##
pairtools parse --min-mapq 40 --walks-policy 5unique --max-inter-align-gap 30 --chroms-path ./juicer/references/hg38.genome ./aligned.sam > parsed.pairsam
### --min-mapq 40 :
### --walks-policy 5unique :
### --max-inter-align-gap 30 : 
### --chroms-path : specify path to the reference genome
#### The .pairsam file will contains all pairs recorded such that regardless of read1 and read2, the first will have the lower genomic coordinates

# Sort the parsed pairs
pairtools sort --nproc 8 --tmpdir=/home/user/temp/ parsed.pairsam > sorted.pairsam
## --nproc 8 : 
## --tempdir= : 

# Remove PCR duplicates 
## pairtools dedup detects molecules that could be formed via PCR duplication and tags them as “DD” pair type
pairtools dedup --nproc-in 4 --nproc-out 4 --mark-dups --output-stats stats.txt --output dedup.pairsam sorted.pairsam
### --nproc-in 4 : 
### --nproc-out 4 : 
### --mark-dups : 
### --output-stats : 
### --output dedup.pairsam : 
#### Checking stats.txt to see duplicate analysis:
python3 ./Micro-C/get_qc.py -p stats.txt
Total Read Pairs                              4,584,748  100%
Unmapped Read Pairs                           266,576    5.81%
Mapped Read Pairs                             3,224,298  70.33%
PCR Dup Read Pairs                            137,730    3.0%
No-Dup Read Pairs                             3,086,568  67.32%
No-Dup Cis Read Pairs                         2,213,055  71.7%
No-Dup Trans Read Pairs                       873,513    28.3%
No-Dup Valid Read Pairs (cis >= 1kb + trans)  2,549,852  82.61%
No-Dup Cis Read Pairs < 1kb                   536,716    17.39%
No-Dup Cis Read Pairs >= 1kb                  1,676,339  54.31%
No-Dup Cis Read Pairs >= 10kb                 1,370,180  44.39%






